<!--<nav>
	<h4>Bariact</h4>
	<ul>
		<li><a href="/">Home</a></li>
		<li><a href="/diet/view">Diet</a></li>
		<li><a href="/profile">Profile</a></li>
		<li><a href="/auth/logout">Log Out</a></li>
	</ul>
</nav>-->

<nav>
    <div class="logo-name">
        <div class="logo-image">
            <img src="/logo.png" alt="">
        </div>

        <span class="logo_name">BARIACT</span>
    </div>

    <div class="menu-items">
        
        <ul class="nav-links">
            <li><a href="/dashboard">
                <i class="uil uil-estate"></i>
                <span class="link-name">Dashboard</span>
            </a></li>
            <li><a href="/calendar">
                <i class="uil uil-calendar-alt"></i>
                <span class="link-name">Calendar</span>
            </a></li>
            <li><a href="/diet/view">
                <i class="uil uil-utensils"></i>
                <span class="link-name">Diet</span>
            </a></li>
            <li><a href="/exercise/view">
                <i class="uil uil-basketball"></i>
                <span class="link-name">Exercise</span>
            </a></li>
            <li><a href="/analytics">
                <i class="uil uil-chart"></i>
                <span class="link-name">Analytics</span>
            </a></li>
            
            <li><a href="/profile/display">
                <i class="uil uil-user-circle"></i>
                <span class="link-name">Profile</span>
            </a></li>
          
        </ul>
        
        <ul class="logout-mode">
     
            <li><a href="/auth/logout">
                <i class="uil uil-signout"></i>
                <span class="link-name">Logout</span>
            </a></li>
            

            <li class="mode">
                <a href="#">
                    <i class="uil uil-moon"></i>
                <span class="link-name">Dark Mode</span>
                </a>

                <div class="mode-toggle">
                    <span class="switch"></span>
                </div>
            </li>
        </ul>        
    </div>
</nav>


<section class="dashboard">
	
    <div class="top">
        <i class="uil uil-bars sidebar-toggle"></i>
      
          <h6 style="float: right;">
           {{#if user}}
                {{#if user.image}}
                    <img src="/images/{{user.image}}" class="pp" id="pp" style="height: 30px; width:30px; object-fit: cover; overflow:hidden"/>
                {{else}}
                    <img src="/images/profileimage.png"  class="pp" id="pp" style="height: 30px; width:30px; object-fit: cover; overflow:hidden"/>
                {{/if}}
                {{user.role}}, {{user.fullname}}, {{user.email}}, {{user.ic}}
            {{/if}}
            
            
            {{#each getuser}}
                 {{#if this.image}}
                    <img src="/images/{{this.image}}" class="pp" id="pp" style="height: 30px; width:30px; object-fit: cover; overflow:hidden"/>
                {{else}}
                    <img src="/images/profileimage.png"  class="pp" id="pp" style="height: 30px; width:30px; object-fit: cover; overflow:hidden"/>
                {{/if}}
                {{this.role}}, {{this.fullname}}, {{this.email}}, {{this.ic}}
            {{/each}}
            
             {{#if assignedTo}}
                Assigned to {{assignedTo}}</h6>
            {{/if}}
            
    </div>
	
    <div class="dash-content">
        
		<div class="overview">
			<div class="title">
                <i class="uil uil-chart"></i>
                <span class="text">Your Calories Analytics</span>
            </div>
			<div class="boxes">
                
                {{#if recom}} 
                <div class="activity" style="width: 100%;">
                    <div class="card">
                        <div class="card-body">         
                            <label for="description">Diet Recommendation Set by {{#if assignedTo}}{{assignedTo}}{{/if}} <i class="uil uil-utensils"></i></label>
                            <h5><p><b>{{#each recom}}{{this.description}}{{/each}}</b></p></h5>
                        </div>
                    </div>
                </div>
                {{/if}}
                
                <div class="row g-3 align-items-center" style="margin-top: 5px;">
                    <div class="col-auto">
                         <label for="datepicker">Select Month and Year:</label>
                    </div>
                    <div class="col-auto">
                       <input type="month" class="form-control" name="datepicker" id="datepicker"/>
                    </div>
                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary mb-2" onclick="displayCalories()">Save</button>
                    </div>
                </div><br>
            
                <div class="container" style="background-color: #ffffff;">
                    <div class="alert alert-primary alert-dismissible fade show" role="alert" id="alert1">
                        <strong>Display Analytics based on Month</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
                
        
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col" class="text-center">Date</th>
                            <th scope="col" class="text-center">Total Daily Calories Intake (kcal)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                             <td id="date1"></td>
                             <td id="calories1"></td>
                        </tr>
                    </tbody>
                </table>
                
                <canvas id="myChart"></canvas>
            </div>
		</div>
        
        
        
        <div class="overview">
			<div class="title">
                <i class="uil uil-chart"></i>
                <span class="text">Your Exercise Analytics</span>
            </div>
			<div class="boxes">
                
                {{#if recomex}} 
                <div class="activity" style="width: 100%;">
                    <div class="card">
                        <div class="card-body">         
                            <label for="description">Exercise Recommendation Set by {{#if assignedTo}}{{assignedTo}}{{/if}} <i class="uil uil-basketball"></i></label>
                            <h5><p><b>{{#each recomex}}{{this.description}}{{/each}}</b></p></h5>
                        </div>
                    </div>
                </div>
                {{/if}}
                
                 <div class="row g-3 align-items-center" style="margin-top: 5px;">
                    <div class="col-auto">
                         <label for="datepicker2">Select Month and Year:</label>
                    </div>
                    <div class="col-auto">
                       <input type="month" class="form-control" name="datepicker2" id="datepicker2"/>
                    </div>
                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary mb-2" onclick="displayExercise()">Save</button>
                    </div>
                </div><br>
                
                 <div class="container" style="background-color: #ffffff;">
                    <div class="alert alert-primary alert-dismissible fade show" role="alert" id="alert2">
                        <strong>Display Analytics based on Month</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
                
                 <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col" class="text-center">Date</th>
                            <th scope="col" class="text-center">Total Daily Calories Burned (kcal)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                             <td id="date2"></td>
                             <td id="calories2"></td>
                        </tr>
                    </tbody>
                </table>
                
                <canvas id="mySecChart"></canvas>
                
            </div>
		</div>
        
	</div>
</section>

<script>
    
    
    $(document).ready(function() {
        
        
        var datep = new Date(Date.now());
        //document.getElementById("alert1").innerHTML = (datep.getMonth() + 1) + "/" + datep.getFullYear();
        
        //diet
        var labels = [], c = [];
        var typeofmeal, calofmeal;
        var sdate, getsdate;
        {{#each rows}}
        
            typeofmeal = "{{{this.time}}}"; //get all createdAt 
            sdate = new Date(typeofmeal); //assign ad Date format
            
            if((datep.getMonth() === sdate.getMonth()) && (datep.getFullYear() === sdate.getFullYear())){ //check whether month&year from user input match with data from database
                
                getsdate = sdate.getDate() + "/" + (sdate.getMonth()+1) + "/" + sdate.getFullYear(); 
                //document.write("getsdate: "+getsdate);
                
                //labels.push(getsdate);
                //c.push(calofmeal);
                
                calofmeal = "{{{this.calories}}}";
                calofmeal = parseInt(calofmeal);
                
                document.getElementById("alert1").innerHTML = "<strong>Display Analytics on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            
                //document.write(labels.length+ "<br>");
                //document.write(c.length+ "<br>");
                //document.write("Calories 1" + {{{this.calories}}}+ "<br>");
                //document.write("Calories 2" + calofmeal+ "<br>");
                // document.write("Year : " + sdate.getFullYear() + "<br>");
                //document.write("Month : " + (sdate.getMonth()+1) + "<br>");
                //document.write("Day : " + sdate.getDate() + "<br>");
                //document.write("Time : " + sdate.getHours() + "<br>");
                //document.write("Minute : " + sdate.getMinutes() + "<br>");
                
                if(labels.includes(getsdate)){
                    
                    for (let i = 0; i < labels.length; i++) {
                        if (labels[i] == getsdate) {
                            c[i] = c[i] + calofmeal;
                            console.log(c[i]);
                            break;
                        }
                    }
                    
                }else{
                    c.push(calofmeal);
                    labels.push(getsdate);
                }
                
                //document.getElementById('myChart').style.display = "block";
            }
            else{
                //document.getElementById('myChart').style.display = "block";
                document.getElementById("alert1").innerHTML = "<strong>No Data Recorded on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            }
                
        {{/each}}
        
        //document.write("Type of meal : ["+ labels + "]<br>");
        //document.write("Cal of meal : ["+ c + "]<br>");
    
        var displaydate1 = "", displaycalories1 = "";
        
        for(var i = 0 ; i < (labels.length); i++ ){
            displaydate1 = displaydate1  + labels[i] + "<br>";
            displaycalories1 = displaycalories1 + c[i] + "<br>";
        }
        
        document.getElementById("date1").innerHTML = displaydate1;
        document.getElementById("calories1").innerHTML = displaycalories1;
        
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Food Calories Intake',
                    data: c,
                    borderWidth: 1,
                        backgroundColor: [
                        'rgba(255, 99, 132, 0.2)'
                        
                    ]
                }]
            },options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            display: false //this will remove only the label
                        }
                    }]
                }
            }
            
            
        });
        
        //exercise
        
         var labels = [], c = [];
        var typeofmeal, calofmeal;
        var sdate, getsdate;
        {{#each result}}
        
            typeofmeal = "{{{this.time}}}"; //get all createdAt 
            sdate = new Date(typeofmeal); //assign ad Date format
            
            if((datep.getMonth() === sdate.getMonth()) && (datep.getFullYear() === sdate.getFullYear())){ //check whether month&year from user input match with data from database
                
                getsdate = sdate.getDate() + "/" + (sdate.getMonth()+1) + "/" + sdate.getFullYear(); 
                //document.write("getsdate: "+getsdate);
                
                //labels.push(getsdate);
                //c.push(calofmeal);
                
                calofmeal = "{{{this.calories_burn}}}";
                calofmeal = parseInt(calofmeal);
                
                document.getElementById("alert2").innerHTML = "<strong>Display Analytics on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            
                if(labels.includes(getsdate)){
                    
                    for (let i = 0; i < labels.length; i++) {
                        if (labels[i] == getsdate) {
                            c[i] = c[i] + calofmeal;
                            console.log(c[i]);
                            break;
                        }
                    }
                    
                }else{
                    c.push(calofmeal);
                    labels.push(getsdate);
                }
                
                //document.getElementById('mySecChart').style.display = "block";
            }
            else{
                //document.getElementById('mySecChart').style.display = "none";
                document.getElementById("alert2").innerHTML = "<strong>No Data Recorded on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            }
                
        {{/each}}
        
        //document.write("Type of meal : ["+ labels + "]<br>");
        //document.write("Cal of meal : ["+ c + "]<br>");
    
        var displaydate2 = "", displaycalories2 = "";
        
        for(var i = 0 ; i < (labels.length); i++ ){
            displaydate2 = displaydate2  + labels[i] + "<br>";
            displaycalories2 = displaycalories2 + c[i] + "<br>";
        }
        
        document.getElementById("date2").innerHTML = displaydate2;
        document.getElementById("calories2").innerHTML = displaycalories2;
        
        const secctx = document.getElementById('mySecChart').getContext('2d');
        const mySecChart = new Chart(secctx, {
            type: 'line',
            data: {
                labels: labels,
                //labels: labels,
                datasets: [{
                    label: 'Total Calories Burned',
                    data: c,
                    borderWidth: 1
                }]
                
            },options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            display: false //this will remove only the label
                        }
                    }]
                }
            }
        });
        
    
    });
    
    function displayCalories(){
        //document.getElementById('myChart').style.display = "block";
        
        var datepick = document.getElementById('datepicker').value;
        var datep = new Date(datepick);
        //document.getElementById("alert1").innerHTML = (datep.getMonth() + 1) + "/" + datep.getFullYear();
                
        var labels = [], c = [];
        var typeofmeal, calofmeal;
        var sdate, getsdate;
        {{#each rows}}
        
            typeofmeal = "{{{this.time}}}"; //get all createdAt 
            sdate = new Date(typeofmeal); //assign ad Date format
            
            if((datep.getMonth() === sdate.getMonth()) && (datep.getFullYear() === sdate.getFullYear())){ //check whether month&year from user input match with data from database
                
                getsdate = sdate.getDate() + "/" + (sdate.getMonth()+1) + "/" + sdate.getFullYear(); 
                //document.write("getsdate: "+getsdate);
                
                //labels.push(getsdate);
                //c.push(calofmeal);
                
                calofmeal = "{{{this.calories}}}";
                calofmeal = parseInt(calofmeal);
                
                document.getElementById("alert1").innerHTML = "<strong>Display Analytics on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            
                //document.write(labels.length+ "<br>");
                //document.write(c.length+ "<br>");
                //document.write("Calories 1" + {{{this.calories}}}+ "<br>");
                //document.write("Calories 2" + calofmeal+ "<br>");
                // document.write("Year : " + sdate.getFullYear() + "<br>");
                //document.write("Month : " + (sdate.getMonth()+1) + "<br>");
                //document.write("Day : " + sdate.getDate() + "<br>");
                //document.write("Time : " + sdate.getHours() + "<br>");
                //document.write("Minute : " + sdate.getMinutes() + "<br>");
                
                if(labels.includes(getsdate)){
                    
                    for (let i = 0; i < labels.length; i++) {
                        if (labels[i] == getsdate) {
                            c[i] = c[i] + calofmeal;
                            console.log(c[i]);
                            break;
                        }
                    }
                    
                }else{
                    c.push(calofmeal);
                    labels.push(getsdate);
                }
                
                //document.getElementById('myChart').style.display = "block";
            }
            else{
                //document.getElementById('myChart').style.display = "block";
                document.getElementById("alert1").innerHTML = "<strong>No Data Recorded on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            }
                
        {{/each}}
        
        //document.write("Type of meal : ["+ labels + "]<br>");
        //document.write("Cal of meal : ["+ c + "]<br>");
    
        var displaydate1 = "", displaycalories1 = "";
        
        for(var i = 0 ; i < (labels.length); i++ ){
            displaydate1 = displaydate1  + labels[i] + "<br>";
            displaycalories1 = displaycalories1 + c[i] + "<br>";
        }
        
        document.getElementById("date1").innerHTML = displaydate1;
        document.getElementById("calories1").innerHTML = displaycalories1;
        
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Food Calories Intake',
                    data: c,
                    borderWidth: 1,
                        backgroundColor: [
                        'rgba(255, 99, 132, 0.2)'
                        
                    ]
                }]
            },options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            display: false //this will remove only the label
                        }
                    }]
                }
            }
            
            
        });
    }


    function displayExercise(){
        
    // document.getElementById('mySecChart').style.display = "block";
        
        var datepick = document.getElementById('datepicker2').value;
        var datep = new Date(datepick);
        //document.getElementById("alert1").innerHTML = (datep.getMonth() + 1) + "/" + datep.getFullYear();
        
                
        var labels = [], c = [];
        var typeofmeal, calofmeal;
        var sdate, getsdate;
        {{#each result}}
        
            typeofmeal = "{{{this.time}}}"; //get all createdAt 
            sdate = new Date(typeofmeal); //assign ad Date format
            
            if((datep.getMonth() === sdate.getMonth()) && (datep.getFullYear() === sdate.getFullYear())){ //check whether month&year from user input match with data from database
                
                getsdate = sdate.getDate() + "/" + (sdate.getMonth()+1) + "/" + sdate.getFullYear(); 
                //document.write("getsdate: "+getsdate);
                
                //labels.push(getsdate);
                //c.push(calofmeal);
                
                calofmeal = "{{{this.calories_burn}}}";
                calofmeal = parseInt(calofmeal);
                
                document.getElementById("alert2").innerHTML = "<strong>Display Analytics on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            
                if(labels.includes(getsdate)){
                    
                    for (let i = 0; i < labels.length; i++) {
                        if (labels[i] == getsdate) {
                            c[i] = c[i] + calofmeal;
                            console.log(c[i]);
                            break;
                        }
                    }
                    
                }else{
                    c.push(calofmeal);
                    labels.push(getsdate);
                }
                
                //document.getElementById('mySecChart').style.display = "block";
            }
            else{
                //document.getElementById('mySecChart').style.display = "none";
                document.getElementById("alert2").innerHTML = "<strong>No Data Recorded on " + datep.toLocaleString('default', { month: 'long' }) + " " + datep.getFullYear() + "</strong>";
            }
                
        {{/each}}
        
        //document.write("Type of meal : ["+ labels + "]<br>");
        //document.write("Cal of meal : ["+ c + "]<br>");
    
        var displaydate2 = "", displaycalories2 = "";
        
        for(var i = 0 ; i < (labels.length); i++ ){
            displaydate2 = displaydate2  + labels[i] + "<br>";
            displaycalories2 = displaycalories2 + c[i] + "<br>";
        }
        
        document.getElementById("date2").innerHTML = displaydate2;
        document.getElementById("calories2").innerHTML = displaycalories2;
        
        const secctx = document.getElementById('mySecChart').getContext('2d');
        const mySecChart = new Chart(secctx, {
            type: 'line',
            data: {
                labels: labels,
                //labels: labels,
                datasets: [{
                    label: 'Total Calories Burned',
                    data: c,
                    borderWidth: 1
                }]
                
            },options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            display: false //this will remove only the label
                        }
                    }]
                }
            }
        });
        
    }
</script>